{"version":3,"sources":["file:///Users/fe-anhtu-fresher/Downloads/Telegram%20Desktop/PromiseExample/Async-Javascript/assets/scripts/Table.ts"],"names":["_decorator","Component","Label","Reel","ccclass","property","Table","type","onLoad","_reels","getComponentsInChildren","spin","status","string","index","length","promise","startSpin","_promiseList","push","Promise","all","then","onTableStop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAsBC,MAAAA,K,OAAAA,K;;AAClCC,MAAAA,I,iBAAAA,I;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;uBAIjBM,K,WADZF,OAAO,CAAC,OAAD,C,UAMHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEL;AAAP,OAAD,C,oCANb,MACaI,KADb,SAC2BL,SAD3B,CACqC;AAAA;AAAA;;AAAA,0CAExB,EAFwB;;AAAA,gDAGlB,EAHkB;;AAAA;AAAA;;AAQjCO,QAAAA,MAAM,GAAG;AACL,eAAKC,MAAL,GAAc,KAAKC,uBAAL;AAAA;AAAA,2BAAd;AACH;;AAEDC,QAAAA,IAAI,GAAG;AACH,eAAKC,MAAL,CAAYC,MAAZ,GAAqB,gBAArB;;AAEA,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKL,MAAL,CAAYM,MAAxC,EAAgDD,KAAK,EAArD,EAAyD;AACrD,gBAAME,OAAO,GAAG,KAAKP,MAAL,CAAYK,KAAZ,EAAmBG,SAAnB,EAAhB;;AACA,iBAAKC,YAAL,CAAkBC,IAAlB,CAAuBH,OAAvB;AACH;;AACDI,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,YAAjB,EAA+BI,IAA/B,CAAoC,MAAM,KAAKC,WAAL,EAA1C;AACH;;AAEDA,QAAAA,WAAW,GAAG;AACV,eAAKX,MAAL,CAAYC,MAAZ,GAAqB,eAArB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;;;AAzDqC,O;;;;;iBAMxB,I","sourcesContent":["\nimport { _decorator, Component, Node, log, Label } from 'cc';\nimport { Reel } from './Reel';\nconst { ccclass, property } = _decorator;\n\n \n@ccclass('Table')\nexport class Table extends Component {\n\n    _reels = [];\n    _promiseList = [];\n\n    @property({type: Label})\n    status = null;\n\n    onLoad() {\n        this._reels = this.getComponentsInChildren(Reel);\n    }\n\n    spin() {\n        this.status.string = 'Table Spinning';\n\n        for (let index = 0; index < this._reels.length; index++) {\n            const promise = this._reels[index].startSpin();\n            this._promiseList.push(promise);\n        }\n        Promise.all(this._promiseList).then(() => this.onTableStop());\n    }\n\n    onTableStop() {\n        this.status.string = 'Table Stopped';\n    }\n\n    /*\n    DONE\n    Quest 1: Implement function spin table 5 reel cùng lúc, sử dụng promise, trả về call back khi tất cả reel cùng dừng lại\n    có thể update lại function spin, không được update Reel.ts\n    \n    onTableStop() {\n        this.status.string = 'Table Stopped';\n    }\n    */\n\n    /*\n    DONE\n    Quest 2: Từ quest 1, kiểm tra nếu có một trong những reel chạy quá 10s chưa dừng trigger function onTableTimeout\n\n    onTableTimout() {\n        this.status.string = 'Table Timeout';\n    }\n    */\n\n    /*\n    DONE\n    Quest 3: Implement function để table spin từng reel theo thứ tự 1->5 lần lượt reel này dừng đến reel tiếp theo,\n    sau khi tất cả các reel đã dừng thì trigger function onTableStop\n\n    onTableStop() {\n        log('onTableStop');\n    }\n    */\n\n    /*\n    Quest 4: Update Reel.ts để mỗi function startSpin là 1 promise, sau đó làm lại các quest 1,2,3\n    */\n}\n"]}