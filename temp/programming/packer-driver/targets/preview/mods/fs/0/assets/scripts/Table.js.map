{"version":3,"sources":["file:///Users/fe-anhtu-fresher/Downloads/Telegram%20Desktop/PromiseExample/Async-Javascript/assets/scripts/Table.ts"],"names":["_decorator","Component","Label","Reel","ccclass","property","Table","type","onLoad","_reels","getComponentsInChildren","spin","status","string","_stopIndex","_promiseList","index","reel","spinPromise","Promise","resolve","callbackStop","onCallbackStop","bind","setTimeout","startSpin","push","length","all","then","onTableStop","Math","random","onTableTimeout"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAsBC,MAAAA,K,OAAAA,K;;AAClCC,MAAAA,I,iBAAAA,I;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;uBAIjBM,K,WADZF,OAAO,CAAC,OAAD,C,UAOHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL;AAAR,OAAD,C,oCAPb,MACaI,KADb,SAC2BL,SAD3B,CACqC;AAAA;AAAA;;AAAA,0CAExB,EAFwB;;AAAA,gDAGlB,EAHkB;;AAAA,8CAIJ,EAJI;;AAAA;;AAAA,8CASJ,CATI;AAAA;;AAWjCO,QAAAA,MAAM,GAAG;AACL,eAAKC,MAAL,GAAc,KAAKC,uBAAL;AAAA;AAAA,2BAAd;AACH;;AAEDC,QAAAA,IAAI,GAAG;AAAA;;AACH,eAAKC,MAAL,CAAYC,MAAZ,GAAqB,gBAArB;AACA,eAAKC,UAAL,GAAkB,CAAlB;AACA,eAAKC,YAAL,GAAoB,EAApB;;AAHG,qCAKMC,KALN;AAMC,gBAAMC,IAAI,GAAG,KAAI,CAACR,MAAL,CAAYO,KAAZ,CAAb;AAEA,gBAAME,WAAW,GAAG,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACzC,kBAAMC,YAAY,GAAG,KAAI,CAACC,cAAL,CAAoBC,IAApB,CAAyB,KAAzB,EAA+BP,KAA/B,EAAsCI,OAAtC,CAArB;;AACAI,cAAAA,UAAU,CAAC,MAAMP,IAAI,CAACQ,SAAL,CAAeJ,YAAf,CAAP,EAAqC,MAAML,KAA3C,CAAV;AACH,aAHmB,CAApB;;AAKA,YAAA,KAAI,CAACD,YAAL,CAAkBW,IAAlB,CAAuBR,WAAvB;AAbD;;AAKH,eAAK,IAAIF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKP,MAAL,CAAYkB,MAAxC,EAAgDX,KAAK,EAArD,EAAyD;AAAA,kBAAhDA,KAAgD;AASxD;;AAEDG,UAAAA,OAAO,CAACS,GAAR,CAAY,KAAKb,YAAjB,EAA+Bc,IAA/B,CAAoC,MAAM,KAAKC,WAAL,EAA1C;AACH;;AAEDR,QAAAA,cAAc,CAACN,KAAD,EAAQI,OAAR,EAAiB;AAC3B,cAAIJ,KAAK,KAAK,KAAKF,UAAnB,EAA+B;AAC3B,iBAAKL,MAAL,CAAYO,KAAZ,EAAmB,WAAnB,IAAkC,IAAlC;AACA,iBAAKP,MAAL,CAAYO,KAAZ,EAAmB,YAAnB,IAAmC,CAAnC;AACA,iBAAKP,MAAL,CAAYO,KAAZ,EAAmB,aAAnB,IAAoCe,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqBhB,KAAzD;AACA;AACH;;AAED,eAAKF,UAAL;AACAM,UAAAA,OAAO;AACP,iBAAO,IAAP;AACH;;AAEDU,QAAAA,WAAW,GAAG;AACV,eAAKlB,MAAL,CAAYC,MAAZ,GAAqB,eAArB;AACH;;AAEDoB,QAAAA,cAAc,GAAG;AACb,eAAKrB,MAAL,CAAYC,MAAZ,GAAqB,eAArB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAII;AACJ;AACA;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;;;AAvFqC,O;;;;;iBAOxB,I","sourcesContent":["\nimport { _decorator, Component, Node, log, Label, tween, Tween } from 'cc';\nimport { Reel } from './Reel';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('Table')\nexport class Table extends Component {\n\n    _reels = [];\n    _promiseList = [];\n    _tweenList: Tween<Table>[] = [];\n\n    @property({ type: Label })\n    status = null;\n\n    private _stopIndex: number = 0;\n\n    onLoad() {\n        this._reels = this.getComponentsInChildren(Reel);\n    }\n\n    spin() {\n        this.status.string = 'Table Spinning';\n        this._stopIndex = 0;\n        this._promiseList = [];\n\n        for (let index = 0; index < this._reels.length; index++) {\n            const reel = this._reels[index];\n\n            const spinPromise = new Promise((resolve) => {\n                const callbackStop = this.onCallbackStop.bind(this, index, resolve);\n                setTimeout(() => reel.startSpin(callbackStop), 250 * index);\n            })\n\n            this._promiseList.push(spinPromise);\n        }\n\n        Promise.all(this._promiseList).then(() => this.onTableStop());\n    }\n\n    onCallbackStop(index, resolve) {\n        if (index !== this._stopIndex) {\n            this._reels[index]['_spinning'] = true;\n            this._reels[index]['_rollCount'] = 0;\n            this._reels[index]['_rollTarget'] = Math.random() * 10 + index;\n            return;\n        }\n\n        this._stopIndex++;\n        resolve();\n        return true;\n    }\n\n    onTableStop() {\n        this.status.string = 'Table Stopped';\n    }\n\n    onTableTimeout() {\n        this.status.string = 'Table Timeout';\n    }\n\n    /*\n    DONE\n\n    Quest 1: Implement function spin table 5 reel cùng lúc, sử dụng promise, trả về call back khi tất cả reel cùng dừng lại\n    có thể update lại function spin, không được update Reel.ts\n    \n    onTableStop() {\n        this.status.string = 'Table Stopped';\n    }\n    */\n\n    /*\n    DONE\n\n    Quest 2: Từ quest 1, kiểm tra nếu có một trong những reel chạy quá 10s chưa dừng trigger function onTableTimeout\n\n    onTableTimout() {\n        this.status.string = 'Table Timeout';\n    }\n    */\n\n    /* \n    Quest 3: Implement function để table spin từng reel theo thứ tự 1->5 lần lượt reel này dừng đến reel tiếp theo,\n    sau khi tất cả các reel đã dừng thì trigger function onTableStop\n\n    onTableStop() {\n        log('onTableStop');\n    }\n    */\n\n    /*\n    Quest 4: Update Reel.ts để mỗi function startSpin là 1 promise, sau đó làm lại các quest 1,2,3\n    */\n}\n"]}