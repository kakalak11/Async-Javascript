{"version":3,"sources":["file:///Users/fe-anhtu-fresher/Downloads/Telegram%20Desktop/PromiseExample/Async-Javascript/assets/scripts/Table.ts"],"names":["_decorator","Component","Label","Reel","ccclass","property","Table","type","onLoad","_reels","getComponentsInChildren","spin","status","string","forEach","reel","resolve","reject","promise","Promise","startSpin","setTimeout","_promiseList","push","callbackComplete","onTableStop","bind","callbackTimeOut","onTableTimeout","all","then","catch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAsBC,MAAAA,K,OAAAA,K;;AAClCC,MAAAA,I,iBAAAA,I;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;uBAIjBM,K,WADZF,OAAO,CAAC,OAAD,C,UAMHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL;AAAR,OAAD,C,oCANb,MACaI,KADb,SAC2BL,SAD3B,CACqC;AAAA;AAAA;;AAAA,0CAExB,EAFwB;;AAAA,gDAGlB,EAHkB;;AAAA;AAAA;;AAQjCO,QAAAA,MAAM,GAAG;AACL,eAAKC,MAAL,GAAc,KAAKC,uBAAL;AAAA;AAAA,2BAAd;AACH;;AAEDC,QAAAA,IAAI,GAAG;AACH,eAAKC,MAAL,CAAYC,MAAZ,GAAqB,gBAArB;;AACA,eAAKJ,MAAL,CAAYK,OAAZ,CAAoBC,IAAI,IAAI;AACxB,gBAAMC,OAAO,GAAG,MAAM,IAAtB;;AACA,gBAAMC,MAAM,GAAG,MAAM,KAArB;;AACA,gBAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACH,OAAD,EAAUC,MAAV,KAAqB;AAC7CF,cAAAA,IAAI,CAACK,SAAL,CAAeJ,OAAf;AACAK,cAAAA,UAAU,CAACJ,MAAD,EAAS,KAAT,CAAV;AACH,aAHe,CAAhB;;AAIA,iBAAKK,YAAL,CAAkBC,IAAlB,CAAuBL,OAAvB;AACH,WARD;;AASA,cAAMM,gBAAgB,GAAG,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAzB;AACA,cAAMC,eAAe,GAAG,KAAKC,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAxB;AACAP,UAAAA,OAAO,CAACU,GAAR,CAAY,KAAKP,YAAjB,EAA+BQ,IAA/B,CAAoCN,gBAApC,EAAsDO,KAAtD,CAA4DJ,eAA5D;AACH;;AAEDF,QAAAA,WAAW,GAAG;AACV,eAAKb,MAAL,CAAYC,MAAZ,GAAqB,eAArB;AACH;;AAEDe,QAAAA,cAAc,GAAG;AACb,eAAKhB,MAAL,CAAYC,MAAZ,GAAqB,eAArB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAGI;AACJ;AACA;;;AAlEqC,O;;;;;iBAMxB,I","sourcesContent":["\nimport { _decorator, Component, Node, log, Label } from 'cc';\nimport { Reel } from './Reel';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('Table')\nexport class Table extends Component {\n\n    _reels = [];\n    _promiseList = [];\n\n    @property({ type: Label })\n    status = null;\n\n    onLoad() {\n        this._reels = this.getComponentsInChildren(Reel);\n    }\n\n    spin() {\n        this.status.string = 'Table Spinning';\n        this._reels.forEach(reel => {\n            const resolve = () => true;\n            const reject = () => false;\n            const promise = new Promise((resolve, reject) => {\n                reel.startSpin(resolve);\n                setTimeout(reject, 10000);\n            })\n            this._promiseList.push(promise);\n        });\n        const callbackComplete = this.onTableStop.bind(this);\n        const callbackTimeOut = this.onTableTimeout.bind(this);\n        Promise.all(this._promiseList).then(callbackComplete).catch(callbackTimeOut);\n    }\n\n    onTableStop() {\n        this.status.string = 'Table Stopped';\n    }\n\n    onTableTimeout() {\n        this.status.string = 'Table Timeout';\n    }\n\n    /*\n    DONE\n\n    Quest 1: Implement function spin table 5 reel cùng lúc, sử dụng promise, trả về call back khi tất cả reel cùng dừng lại\n    có thể update lại function spin, không được update Reel.ts\n    \n    onTableStop() {\n        this.status.string = 'Table Stopped';\n    }\n    */\n\n    /*\n    Quest 2: Từ quest 1, kiểm tra nếu có một trong những reel chạy quá 10s chưa dừng trigger function onTableTimeout\n\n    onTableTimout() {\n        this.status.string = 'Table Timeout';\n    }\n    */\n\n    /*\n    Quest 3: Implement function để table spin từng reel theo thứ tự 1->5 lần lượt reel này dừng đến reel tiếp theo,\n    sau khi tất cả các reel đã dừng thì trigger function onTableStop\n\n    onTableStop() {\n        log('onTableStop');\n    }\n    */\n\n    /*\n    Quest 4: Update Reel.ts để mỗi function startSpin là 1 promise, sau đó làm lại các quest 1,2,3\n    */\n}\n"]}